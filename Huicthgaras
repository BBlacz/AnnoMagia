import random

# lista kart. Pierwsza liczba 1-6: dziewiątka-as, druga liczba 1-4 (podkowa, kielich,serce,czacha)
karty = ['11','12','13','14','21','22','23','24','31','32','33','34','41','42','43','44','51','52','53','54','61','62','63','64']
kart_dict = {'11':'dziewiątka podkowa','12':'dziewiątka kielich','13':'dziewiątka serce','14':'dziewiątka czacha',
            '21':'dziesiątka podkowa','22':'dziesiątka kielich','23':'dziesiątka serce','24':'dziesiątka czacha',
            '31':'jupek podkowa','32':'jupek kielich','33':'jupek serce','34':'jupek czacha',
            '41':'dama podkowa','42':'dama kielich','43':'dama serce','44':'dama czacha',
            '51':'król podkowa','52':'król kielich','53':'król serce','54':'król czacha',
            '61':'as podkowa','62':'as kielich','63':'as serce','64':'as czacha'}

sukcesy = 0
porażki = 0
nic=0
iteracje = 1000


for i in range (iteracje):
    karty_w_grze = karty.copy()
    
    sukces = ["","",""]
    porażka = ["","",""]
    nowum = False


    while all(sukces) == False and all(porażka) ==False and nowum == False:
       
        if len(karty_w_grze) <5:
            nic +=1
            nowum= True
            break
            
        wylosowaneKarty = random.sample(karty_w_grze,3) #zakładamy, że czarojdź się nie koncentruje

        #print("faza gry " + str(i) + " wylosowane karty: "+ kart_dict[wylosowaneKarty[0]] + ", " \
        #      + kart_dict[wylosowaneKarty[1]] + ", " + kart_dict[wylosowaneKarty[2]])
        for karta in wylosowaneKarty:
            
            if karta[0] == '5' and (karta[1]=='2' or karta[1]=='4') and sukces[0]!=True:
                sukces[0] = True
                karty_w_grze.remove(karta)
            elif karta[1] == '4' and sukces[1]!=True:
                sukces[1] = True
                karty_w_grze.remove(karta)
            elif (karta[1]=='2' or karta[1]=='4')and sukces[2]!=True:
                sukces[2] = True
                karty_w_grze.remove(karta)
            elif karta[1] == '1' and porażka[0]!=True:
                porażka[0] = True
                karty_w_grze.remove(karta)
            elif karta[1] == '1' and porażka[1]!=True:
                porażka[1] = True
                karty_w_grze.remove(karta)
            elif (karta[1] == '1'or karta[1]=='3') and porażka[2]!=True:
                porażka[2] = True
                karty_w_grze.remove(karta)


        #sprawdza powodzenie/niepowodzenie
        if all(sukces) == True:
            sukcesy=sukcesy+1
            print('sukces')
            continue
        elif all(porażka) ==True:
            porażki=porażki+1
            print('porażka')
            continue


        #faza słów
        
        if len(karty_w_grze) <5:
            nic +=1
            nowum == True
            break
        
        wylosowaneKarty = random.sample(karty_w_grze,5)
        
        #print("faza słów " + str(i) + " wylosowane karty: "+ kart_dict[wylosowaneKarty[0]] + ", " + kart_dict[wylosowaneKarty[1]] + ", " \
        #     + kart_dict[wylosowaneKarty[2]] + ", " + kart_dict[wylosowaneKarty[3]] + ", " + kart_dict[wylosowaneKarty[4]])
        for karta in wylosowaneKarty:
            
            if karta[0] == '5' and (karta[1]=='2' or karta[1]=='4') and sukces[0] != True:
                sukces[0] = True
                karty_w_grze.remove(karta)    
            elif karta[1] == '4' and sukces[1] != True:
                sukces[1] = True
                karty_w_grze.remove(karta)    
            elif (karta[1]=='2' or karta[1]=='4') and sukces[2] != True:
                sukces[2] = True
                karty_w_grze.remove(karta)    
            elif karta[1] == '1' and porażka[0]!=True:
                porażka[0] = True
                karty_w_grze.remove(karta)    
            elif karta[1] == '1'and porażka[1]!=True:
                porażka[1] = True
                karty_w_grze.remove(karta)    
            elif (karta[1] == '1'or karta[1]=='3')and porażka[2]!=True:
                porażka[2] = True
                karty_w_grze.remove(karta)    
        #sprawdza powodzenie/niepowodzenie
        if all(sukces) == True:
            sukcesy=sukcesy+1
            print('sukces')
            continue
        elif all(porażka) ==True:
            porażki=porażki+1
            print('porażka')
            continue

        
print(sukcesy/iteracje)
print(porażki/iteracje)
print(nic/iteracje)
